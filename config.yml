# Strands Analyst Configuration

# RSS feed and news agent configuration (merged)
rss:
  # Default number of items to fetch and display
  default_items: 10
  
  # Maximum number of items allowed in a single request
  max_items: 50
  
  # Default timeout for RSS feed requests (seconds)
  timeout: 30
  
  # Whether to include full content in RSS items (vs just summaries)
  include_full_content: true

# Article download configuration
article:
  # Default output directory for downloaded articles
  output_dir: "refer/articles"
  
  # Default timeout for article requests (seconds)
  timeout: 30
  
  # Whether to download images by default
  download_images: true
  
  # Maximum number of images to download per article
  max_images: 20

# Markdown conversion configuration
markdown:
  # Output format for markdown files
  output_format: "markdown"
  
  # Heading style (ATX or SETEXT)
  heading_style: "ATX"
  
  # Whether to include frontmatter metadata by default
  include_metadata: true

# Site metadata analysis configuration
sitemeta:
  # Default output directory for site metadata reports
  output_dir: "refer/sitemeta"
  
  # Whether to save response as markdown file by default
  save_markdown: true
  
  # Timeout for metadata requests (seconds)
  timeout: 30

# News analysis configuration
news:
  # Default output directory for news analysis reports
  output_dir: "refer/news"
  
  # Whether to save response as markdown file by default
  save_markdown: true
  
  # Timeout for news requests (seconds)
  timeout: 30

# Chat interface configuration
chat:
  # Default session directory for chat conversations
  session_dir: "refer/chat-sessions"
  
  # Default conversation window size for context management
  window_size: 20
  
  # Whether to save conversation summaries on exit by default
  save_on_exit: true
  
  # Session timeout in minutes (0 = no timeout)
  session_timeout: 0

# File output configuration for analystai command
analystai:
  # Base directory for all generated files (when not explicitly specified)
  output_base_dir: "analystai-responses"
  
  # Type-specific output directories
  output_directories:
    # Diagrams and visualizations
    diagrams: "analystai-responses/diagrams"
    
    # Markdown documents
    markdown: "analystai-responses/markdown"
    
    # Images (generated or downloaded)
    images: "analystai-responses/images"
    
    # Videos (generated)
    videos: "analystai-responses/videos"
    
    # JSON/YAML data files
    data: "analystai-responses/data"
    
    # Text documents
    text: "analystai-responses/text"
    
    # Code files
    code: "analystai-responses/code"
    
    # HTML files
    html: "analystai-responses/html"
    
    # PDF documents
    pdf: "analystai-responses/pdf"
    
    # CSV files
    csv: "analystai-responses/csv"
    
    # Default for unrecognized types
    default: "analystai-responses/misc"
  
  # Whether to override user-specified paths
  # If false, explicit paths from users are respected
  override_explicit_paths: false
  
  # Whether to create directories automatically
  auto_create_directories: true
  
  # Whether to organize by date (creates YYYY-MM-DD subdirectories)
  organize_by_date: false

# General application settings
app:
  # Application name
  name: "Strands Analyst"
  
  # Version
  version: "0.1.0"

# Logging configuration
logging:
  # Default logging level (DEBUG, INFO, WARNING, ERROR)
  level: "INFO"
  
  # Whether to show logs in non-verbose mode
  show_by_default: false
  
  # Whether to show logs when verbose flag is used
  show_in_verbose: true
  
  # Log format string
  format: "%(levelname)s | %(name)s | %(message)s"
  
  # Whether logging is completely disabled
  enabled: true

# Metrics reporting configuration  
metrics:
  # Whether to show metrics by default (without verbose flag)
  show_by_default: false
  
  # Whether to show metrics when verbose flag is used
  show_in_verbose: true
  
  # Which metrics to include in reports
  include:
    model: true
    tokens: true
    duration: true
    latency: true
    tool_usage: true
    cycles: false  # Only show for verbose or multi-cycle runs
  
  # Display formatting options
  display:
    # Whether to use colors in output
    colors: true
    
    # Minimalist mode (less detailed output)
    minimalist: true
    
    # Add spacing around metrics
    add_spacing: true

# Amazon Bedrock Model Configuration
# Optimizes agent performance using AWS Bedrock model provider
bedrock:
  # Default model configuration
  model:
    # Primary model ID for general analysis tasks
    # Using Claude 3.7 Sonnet inference profile for optimal performance and availability
    default_model_id: "us.anthropic.claude-3-7-sonnet-20250219-v1:0"
    # default_model_id: "us.anthropic.claude-sonnet-4-20250514-v1:0"
    
    # Model IDs for specific use cases (overrides default when specified)
    models:
      # Fast model for quick analysis and simple tasks
      fast: "us.anthropic.claude-3-5-haiku-20241022-v1:0"
      
      # Reasoning model for complex analysis tasks
      reasoning: "us.anthropic.claude-3-7-sonnet-20250219-v1:0"
      # reasoning: "us.anthropic.claude-sonnet-4-20250514-v1:0"
      
      # Chat model for conversational interactions
      chat: "us.anthropic.claude-3-7-sonnet-20250219-v1:0"
      # chat: "us.anthropic.claude-sonnet-4-20250514-v1:0"
  
  # Performance optimization parameters
  performance:
    # Temperature: Controls response randomness (0.0-1.0)
    # Lower = more focused/consistent, Higher = more creative/varied
    temperature:
      default: 0.3        # Balanced for analysis tasks
      sitemeta: 0.2       # More focused for metadata extraction
      news: 0.4           # Slightly more varied for news summaries
      article: 0.3        # Balanced for article analysis
      chat: 0.5           # More conversational for chat
    
    # Top-p: Nucleus sampling for response diversity (0.0-1.0)
    # Lower = more focused vocabulary, Higher = more diverse
    top_p:
      default: 0.8
      sitemeta: 0.7       # More focused for structured data
      news: 0.8           # Balanced for varied content
      article: 0.8        # Balanced for article analysis
      chat: 0.9           # More diverse for conversation
    
    # Maximum tokens to generate
    max_tokens:
      default: 4096
      sitemeta: 2048      # Shorter for metadata analysis
      news: 3072          # Medium for news summaries
      article: 8192       # Longer for detailed article analysis
      chat: 8192          # Increased to prevent response truncation
    
    # Stop sequences to control generation
    stop_sequences:
      default: []
      # Custom stop sequences can be added per use case
  
  # Advanced optimization settings
  advanced:
    # Enable streaming mode for faster perceived response time
    streaming: true
    
    # AWS region for Bedrock service (choose closest for better latency)
    region_name: "us-east-1"
    
    # Content safety and guardrails
    guardrails:
      # Guardrail ID for content filtering (optional)
      guardrail_id: null
      
      # Enable content filtering
      enable_content_filtering: false
    
    # Caching optimizations for better performance
    caching:
      # Cache system prompts for reuse across requests
      cache_prompt: true
      
      # Cache tool definitions for reuse
      cache_tools: true
      
      # Cache timeout in seconds (0 = no timeout)
      cache_timeout: 3600
    
    # Request timeout settings
    timeouts:
      # Connection timeout in seconds
      connection_timeout: 30
      
      # Read timeout in seconds
      read_timeout: 120
      
      # Total request timeout in seconds
      total_timeout: 180
  
  # Agent-specific optimizations
  agents:
    # Site metadata agent optimizations
    sitemeta:
      # Override global model for this specific agent
      model_id: null  # Uses default if null
      
      # Enable reasoning mode for complex site analysis
      reasoning_mode: false
      
      # Custom system prompt optimizations
      optimize_system_prompt: true
    
    # News agent optimizations
    news:
      model_id: null
      reasoning_mode: false
      optimize_system_prompt: true
      
      # Batch processing for multiple RSS items
      batch_processing: true
    
    # Article agent optimizations
    article:
      model_id: null
      reasoning_mode: true  # Enable for detailed article analysis
      optimize_system_prompt: true
    
    # Chat agent optimizations
    chat:
      model_id: null
      reasoning_mode: false
      optimize_system_prompt: true
      
      # Session-specific optimizations
      session_optimization: true
      
      # Enable multimodal support for chat
      multimodal: true
  
  # Usage and cost optimization
  cost_optimization:
    # Enable cost tracking and reporting
    track_usage: true
    
    # Warn when approaching cost thresholds
    cost_warnings: true
    
    # Maximum tokens per hour (0 = no limit)
    hourly_token_limit: 0
    
    # Maximum cost per hour in USD (0.0 = no limit)
    hourly_cost_limit: 0.0

# Community Tools Configuration
# Controls which Strands community tools are available to agents
community_tools:
  # Global tool settings
  enabled: true
  
  # Tool consent and safety settings - RESTORED for user security
  consent:
    # Require consent prompts for security-sensitive operations
    require_consent: true
    
    # Only bypass consent for truly safe, read-only tools
    bypass_for_safe_tools: false
    
    # Tools that always require consent (security-sensitive operations)
    always_require_consent: ["shell", "file_write", "editor", "use_computer", "swarm", "workflow", "use_agent"]
  
  # Human-in-the-loop configuration
  human_in_loop:
    # Enable handoff to user functionality
    enabled: true
    
    # Default timeout for user responses (seconds, 0 = no timeout)
    response_timeout: 300
    
    # Break out of agent loop on handoff by default
    default_breakout: false
  
  # Tool categories and enablement
  # Set to false to disable entire categories
  categories:
    rag_memory: true
    file_operations: true
    shell_system: true
    code_interpretation: true
    web_network: true
    multimodal: true
    aws_services: false  # Disabled by default for security
    utilities: true
    agents_workflows: true
    communication: true
  
  # Individual tool configuration
  # Tools are organized by category for easy management
  tools:
    # RAG & Memory tools
    rag_memory:
      retrieve:
        enabled: true
        require_consent: false
        description: "Semantically retrieve data from Amazon Bedrock Knowledge Bases"
      
      memory:
        enabled: true
        require_consent: false
        description: "Agent memory persistence in Amazon Bedrock Knowledge Bases"
      
      agent_core_memory:
        enabled: true
        require_consent: false
        description: "Integration with Amazon Bedrock Agent Core Memory"
      
      mem0_memory:
        enabled: true
        require_consent: false
        description: "Agent memory and personalization built on top of Mem0"
    
    # File Operations tools
    file_operations:
      editor:
        enabled: true
        require_consent: true
        description: "File editing operations like line edits, search, and undo"
      
      file_read:
        enabled: true
        require_consent: false
        description: "Read and parse files"
      
    
    # Shell & System tools
    shell_system:
      environment:
        enabled: true
        require_consent: false
        description: "Manage environment variables"
      
      shell:
        enabled: true
        require_consent: true  # Shell commands can modify system - require consent
        description: "Execute shell commands for system operations (requires user consent)"
      
      cron:
        enabled: true  # Enabled with consent for scheduling tasks
        require_consent: true
        description: "Task scheduling with cron jobs"
      
      use_computer:
        enabled: true  # Enabled with proper consent handling
        require_consent: true
        description: "Computer automation and screenshot capabilities"
    
    # Code Interpretation tools
    code_interpretation:
      code_interpreter:
        enabled: true
        require_consent: true
        description: "Execute code in isolated sandboxes"
    
    # Web & Network tools
    web_network:
      
      slack:
        enabled: true  # Enabled for Slack integration
        require_consent: true
        description: "Slack integration with real-time events, API access, and message sending"
      
      browser:
        enabled: true  # Enabled with proper consent handling
        require_consent: true
        description: "Browser automation for web scraping and screenshots"
      
      rss:
        enabled: true
        require_consent: false  
        description: "Manage and process RSS feeds"
    
    # Multi-modal tools
    multimodal:
      generate_image_stability:
        enabled: true
        require_consent: false
        description: "Create images with Stability AI"
      
      image_reader:
        enabled: true
        require_consent: false
        description: "Process and analyze images"
      
      generate_image:
        enabled: true
        require_consent: false
        description: "Create AI generated images with Amazon Bedrock"
      
      nova_reels:
        enabled: true
        require_consent: false
        description: "Create AI generated videos with Nova Reels on Amazon Bedrock"
      
      
      diagram:
        enabled: true
        require_consent: false
        description: "Create cloud architecture and UML diagrams"
    
    # AWS Services tools
    aws_services:
      use_aws:
        enabled: true
        require_consent: true
        description: "Interact with AWS services"
    
    # Utilities tools
    utilities:
      calculator:
        enabled: true
        require_consent: false
        description: "Perform mathematical operations"
      
      current_time:
        enabled: true
        require_consent: false
        description: "Get the current date and time"
      
      load_tool:
        enabled: true
        require_consent: false
        description: "Dynamically load more tools at runtime"
      
      sleep:
        enabled: true
        require_consent: false
        description: "Pause execution with interrupt support"
    
    # Agents & Workflows tools
    agents_workflows:
      graph:
        enabled: true
        require_consent: false
        description: "Create and manage multi-agent systems using Strands SDK Graph implementation"
      
      agent_graph:
        enabled: true
        require_consent: false
        description: "Create and manage graphs of agents"
      
      journal:
        enabled: true
        require_consent: false
        description: "Create structured tasks and logs for agents to manage and work from"
      
      swarm:
        enabled: true  # Enabled for advanced agent coordination
        require_consent: true
        description: "Coordinate multiple AI agents in a swarm / network of agents"
      
      stop:
        enabled: true
        require_consent: false
        description: "Force stop the agent event loop"
      
      use_agent:
        enabled: true
        require_consent: true
        description: "Run a new AI event loop with custom prompts and different model providers"
      
      think:
        enabled: true
        require_consent: false
        description: "Perform deep thinking by creating parallel branches of agentic reasoning"
      
      use_llm:
        enabled: true
        require_consent: false
        description: "Run a new AI event loop with custom prompts"
      
      workflow:
        enabled: true  # Enabled for workflow orchestration
        require_consent: true
        description: "Orchestrate sequenced workflows"
      
      batch:
        enabled: true
        require_consent: false
        description: "Call multiple tools from a single model request"
      
      a2a_client:
        enabled: true
        require_consent: false
        description: "Enable agent-to-agent communication"
    
    # Communication tools
    communication:
      handoff_to_user:
        enabled: true
        require_consent: false
        description: "Enable human-in-the-loop workflows by pausing agent execution for user input or transferring control entirely to the user"
  
  # Agent-specific tool configurations
  # Override global settings for specific agents
  agent_overrides:
    chat:
      # Enable comprehensive tool set for interactive chat
      enabled_categories: [
        "rag_memory", 
        "file_operations", 
        "shell_system", 
        "code_interpretation", 
        "web_network", 
        "multimodal", 
        "utilities", 
        "agents_workflows", 
        "communication"
      ]
      
      # Chat-specific tool settings - SELECTIVE CONSENT for security
      tools:
        # Core automation - REQUIRE CONSENT for shell (can execute any command)
        shell:
          require_consent: true  # Security: shell commands can modify system
        environment:
          require_consent: false  # Safe: only manages environment variables
        
        # Code execution - REQUIRE CONSENT (can execute arbitrary code)
        code_interpreter:
          require_consent: true  # Security: can execute code
          
        # File operations - Mixed based on operation type
        file_read:
          require_consent: false  # Safe: read-only operation
        editor:
          require_consent: true  # Security: can modify files
        
        # Utilities - Safe tools don't need consent
        calculator:
          require_consent: false  # Safe: mathematical operations only
        current_time:
          require_consent: false  # Safe: returns current time
        sleep:
          require_consent: false  # Safe: just pauses execution
        
        # AI capabilities
        think:
          require_consent: false
        use_llm:
          require_consent: false
        load_tool:
          require_consent: false
        
        # Multimedia (working)
        image_reader:
          require_consent: false
        diagram:
          require_consent: false
        
        # Memory and data
        memory:
          require_consent: false
        retrieve:
          require_consent: false
        
        # RSS and web content
        rss:
          require_consent: false
        
    sitemeta:
      # Limited tools for site metadata analysis
      enabled_categories: ["web_network", "utilities"]
      
    news:
      # News-specific tools
      enabled_categories: ["web_network", "utilities", "rag_memory"]
      
    article:
      # Article analysis tools
      enabled_categories: ["web_network", "file_operations", "utilities", "rag_memory", "multimodal"]
      
    htmlmd:
      # HTML to markdown conversion tools
      enabled_categories: ["file_operations", "utilities"]